# AMD64架构专用Dockerfile
FROM --platform=linux/amd64 golang:1.24-alpine AS builder

WORKDIR /app

# 安装编译依赖（SQLite需要CGO和gcc）
RUN apk --no-cache add gcc musl-dev sqlite-dev

# 复制go mod和sum文件
COPY backend/go.mod backend/go.sum ./
RUN go mod download

# 复制源代码
COPY backend/ .

# 构建参数
ARG VERSION=v1.2.3
ARG BUILD_DATE

# 编译（启用CGO以支持SQLite，强制AMD64架构）
RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o h-cloud-server ./cmd/server

# 最终镜像
FROM --platform=linux/amd64 alpine:3.18

# 声明构建参数
ARG VERSION=v1.2.3
ARG BUILD_DATE=unknown

WORKDIR /app

# 安装运行时依赖（SQLite运行时库）
RUN apk --no-cache add ca-certificates tzdata curl sqlite

# 从builder阶段复制编译好的应用
COPY --from=builder /app/h-cloud-server .
COPY --from=builder /app/configs ./configs
COPY --from=builder /app/public ./public

# 设置权限
RUN chmod +x h-cloud-server

# 设置环境变量
ENV APP_VERSION=${VERSION:-v1.2.3}
ENV BUILD_DATE=${BUILD_DATE:-unknown}

# 暴露端口
EXPOSE 8080

# 启动应用
CMD ["./h-cloud-server"]